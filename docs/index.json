{
  "CHANGELOG.html": {
    "href": "CHANGELOG.html",
    "title": "| TrinketTinker",
    "keywords": "Changelog All notable changes to this project will be documented here. The format is based on Keep a Changelog, and this project adheres to Semantic Versioning. Unreleased Added The yak is being shaved please come back soon."
  },
  "guide/0-Trinket.html": {
    "href": "guide/0-Trinket.html",
    "title": "Trinkets | TrinketTinker",
    "keywords": "Trinkets Note The following page covers how trinkets are added in the base game, regardless of whether TrinketTinker is being used. You must add trinket items before you can extend it with trinket tinker data. Trinkets can be added with by editing Data/Trinkets, generally with Content Patcher. Example { \"Changes\": [ // Load texture { \"Action\": \"Load\", \"Target\": \"Mods/{{ModId}}/MyTrinket\", \"FromFile\": \"sprites/{{TargetWithoutPath}}.png\" }, // Edit Data/Trinkets { \"Action\": \"EditData\", \"Target\": \"Data/Trinkets\", \"Entries\": { \"{{ModId}}_MyTrinket\": { // Trinket ID, gives qualified ID of (TR){{ModId}}_MyTrinket \"Id\": \"{{ModId}}_MyTrinket\", // Display name (with i18n) \"DisplayName\": \"{{i18n:MyTrinket.DisplayName}}\", // Description, can include {0} token for the trinket level \"Description\": \"{{i18n:MyTrinket.Description}}\", // Path to asset texture load target \"Texture\": \"Mods/{{ModId}}/MyTrinket\", // Sheet index (with 16x16 sprite size) \"SheetIndex\": 0, // Type that controls behavior of trinket, changing this alters what the trinket does, but several effects are hardcoded. \"TrinketEffectClass\": \"StardewValley.Objects.Trinkets.TrinketEffect\", // Add trinket to random drop pool once player attains combat mastery // Can still add other ways to acquire (e.g. shops, machine outputs) \"DropsNaturally\": true, // Allow trinket to reroll stats on the anvil \"CanBeReforged\": true, // Mod specific data, not used by base game or TrinketTinker // \"CustomFields\": null, // \"ModData\": null }, } } ] } Tip Refer to content patcher docs for more details about EditData and Load TrinketEffectClass Game comes with these trinket effect classes: Type Name Notes StardewValley.Objects.Trinkets.TrinketEffect Base class, drops coins if the id is ParrotEgg StardewValley.Objects.Trinkets.RainbowHairTrinketEffect Makes your hair prismatic StardewValley.Objects.Trinkets.CompanionTrinketEffect Spawns the hungry frog companion StardewValley.Objects.Trinkets.MagicQuiverTrinketEffect Shoot an arrow every few seconds StardewValley.Objects.Trinkets.FairyBoxTrinketEffect Heal the player every few seconds while in combat StardewValley.Objects.Trinkets.IceOrbTrinketEffect Shoot an icy orb that freezes the enemy every few seconds The Golden Spur and Basilisk Paw effects are not implemented through an effect class, instead certain parts of game simply checks if the player has a specific trinket equipped."
  },
  "guide/1-Tinker.html": {
    "href": "guide/1-Tinker.html",
    "title": "Tinker | TrinketTinker",
    "keywords": "Tinker To make a trinket use TrinketTinker features, add a new entry to the custom asset mushymato.TrinketTinker/Tinker. The key used must match the unqualified ID of the trinket. When a mushymato.TrinketTinker/Tinker entry exists, the TrinketEffectClass will be set to TrinketTinker.Effects.TrinketTinkerEffect from this mod. Note Trinkets can be reloaded with patch reload <content mod id>, however it must be removed and equipped again to do anything. Structure Property Type Default Notes MinLevel int 1 Changes the level value that will replace {0} in DisplayName. Variants List<VariantData> empty Defines the sprites of the companion. Motions List<MotionData> empty Defines how the companion moves. Abilities List<AbilityData> empty Defines what effects are activated, and when. Notes Technically all fields here are optional, but in that case there'd be little point to using this framework at all. To display a companion, at least 1 Variant and 1 Motion must be defined. To have the trinket do things, at least 1 Ability must be defined. At the moment, there's no reason to have more than 1 Motion, but this may change in the future."
  },
  "guide/2-Variant.html": {
    "href": "guide/2-Variant.html",
    "title": "Variant | TrinketTinker",
    "keywords": "Variant In the base game certain companions such as the frog have different color variants. With this model, you can explicitly define a sprite sheet, texture size, and optionally a color for mask. Structure Property Type Default Notes Texture string required Asset target of the loaded texture, should be a sprite sheet. Width int 16 Width of 1 sprite on the sprite sheet. Height int 16 Height of 1 sprite on the sprite sheet. ColorMask Color empty The color to apply on draw, for use with grayscale sprites. Aside from RGB and hex values, monogame provides named colors and this mod provides special value Prismatic for an animated color cycle. TextureScale float 4 Texture draw scale, default is 4 like most things in the game. ShadowScale float 3 Size of the shadow to draw, 0 to disable shadow. LightSource LightSourceData empty If set, display a light source. This light source is only visible to the owner. LightSourceData Property Type Default Notes Radius float 2 Size of light source. Index int 1 Vanilla light source texture index. Texture string 1 Custom light map, must be loaded into game content. Color string 1 Light color name, accepts same values as ColorMask. Notes There's no need to have the same width and height in all variants, as long as you have the same number of sprites required by the motion."
  },
  "guide/3-Motion.html": {
    "href": "guide/3-Motion.html",
    "title": "Motion | TrinketTinker",
    "keywords": "Motion Motion describes how the companion moves and animates. There are 2 main kinds of motion implemented in by this mod. Lerp: the companion moves to follow whenever the anchor moves far enough. If the anchor is too far, teleport over. Static: the companion stays at a fixed position relative to the anchor. Each of these have sub types like Hover for Lerp motion that hovers, see the individual pages on the sidebar for details. The term \"anchor\" refers to a position that the companion derives it's own position from. By default this is the player, but it can also be other entities like a monster. Structure Property Type Default Notes MotionClass string Lerp Type name of the motion class to use, can use short name like \"Lerp\". Refer to pages under Motion Classes in the table of contents for details. DirectionMode DirectionMode Single Determines how the trinket behaves when changing directions and controls what sprites are required. DirectionRotation bool false When true, the sprite will rotate depending on direction, the exact behavior depends the motion class. LoopMode LoopMode Standard Control animation playback. Standard: 1 2 3 4 1 2 3 4 PingPong: 1 2 3 4 3 2 1 Anchors List<AnchorTargetData> empty Ordered list of anchors to follow, if not set, fall back to following the player AlwaysMoving bool false By default the companion only animates while the anchor is moving, setting this to true makes the companion animate all the time AnimationFrameStart int 0 First frame/sprite index of the directional animations, set this if you want to put multiple companions on 1 file AnimationFrameLength int 4 Length of each cycle for directional animations. Interval float 100 Milisecond Interval between animation frames. Offset Vector2 0, 0 Constant offset to apply to the companion, on top of the motion. LayerDepth LayerDepth Position Changes draw layer relative to player. Position: Calculate layer based on Y position Behind: Always behind the player. InFront: Always infront of the player Args Dictionary varies Arguments specific to a motion class, see respective page for details."
  },
  "guide/3.0-Direction.html": {
    "href": "guide/3.0-Direction.html",
    "title": "Direction Mode | TrinketTinker",
    "keywords": "Direction Mode Direction mode determines number of sprites and the required arragements on the sprite sheet. This only describes number of sprites required, the sprite width and height is controlled by variants. In content patcher, use a string value like \"DirectionMode\": \"DRUL\" to set this value. Internally it is an enum. Arrangement charts in this page assumes AnimationFrameLength is 4, but you can have as many frames as desired. There's also no need to adhere to exact row layout as long as you have the correct number of sprites in the left to right & up to down order. Single Animate the sprite, ignore all changes to direction. This is the default value. Number of Sprites Required: AnimationFrameLength R - Right Similar Single but the sprite is flipped when going left. Number of Sprites Required: 1 x AnimationFrameLength (4 by default) DRUL - Down Right Up Left This mode is similar to NPC and animal sprites in the base game. Four sets of animations are required, one per direction. Number of Sprites Required: 4 x AnimationFrameLength (16 by default) RL - Right Left Similar to R, but allows you to supply left facing sprites for asymmetrical companions. Number of Sprites Required: 2 x AnimationFrameLength (8 by default) DRU - Down Right Up Similar to DRUL, but allows you to skip left facing sprites for symmetrical companions. Number of Sprites Required: 3 x AnimationFrameLength (12 by default)"
  },
  "guide/3.1-Anchors.html": {
    "href": "guide/3.1-Anchors.html",
    "title": "Anchor Mode | TrinketTinker",
    "keywords": "Anchor Mode A companion's motion is relative to another entity's position, generally the player. Anchors consist of a list of AnchorTargetData The order matters as companion will try for anchors in order, and stop once a valid one is found. When none of the anchors are valid, fallback to Owner. Structure Property Type Default Notes Mode AnchorTarget Owner Anchor target, described below. Range int 640 Search range in pixels. Monster If a monster is within the specified range, anchor to it. Owner Default anchor, follows the player who equipped the trinket. Range has no effect."
  },
  "guide/3.2-Motion Classes.html": {
    "href": "guide/3.2-Motion Classes.html",
    "title": "| TrinketTinker",
    "keywords": ""
  },
  "guide/3.2.000-Lerp.html": {
    "href": "guide/3.2.000-Lerp.html",
    "title": "Lerp | TrinketTinker",
    "keywords": "Lerp The Companion follows the anchor at a distance. They will move as fast as they need to in order to stay within the desired distance. When DirectionRotation is true, the companion rotate and point the right side of their sprite towards the anchor. Args Property Type Default Notes Min float 80 Min distance from anchor, the companion does not move until they are this far from the anchor. Max float 640 Max distance from anchor, if the companion is farther away than this, teleport."
  },
  "guide/3.2.001-Hover.html": {
    "href": "guide/3.2.001-Hover.html",
    "title": "Hover | TrinketTinker",
    "keywords": "Hover Like Lerp motion, but the companion is drawn some distance away from their shadow, making them seem like they are hovering. They also do a little bit of periodic bobbing motion. The offset can be controlled with motion offset. Args Property Type Default Notes Magnitude float 0 Amount of up and down bobbing. *and all arguments of Lerp"
  },
  "guide/3.2.002-Bounce.html": {
    "href": "guide/3.2.002-Bounce.html",
    "title": "Bounce | TrinketTinker",
    "keywords": "Bounce Like Lerp motion, but the companion bounces up and down. Args Property Type Default Notes MaxHeight float 128 Height of bounce. Squash bool true Companion sprite squishes a bit when hitting the ground. *and all arguments of Lerp"
  },
  "guide/3.2.100-Static.html": {
    "href": "guide/3.2.100-Static.html",
    "title": "Static | TrinketTinker",
    "keywords": "Static Companion animates according to direction rules, but otherwise does not move. When DirectionRotation is true, the companion points the right side of their sprite towards the owner's facing direction. Args No extra arguments."
  },
  "guide/3.2.101-Orbit.html": {
    "href": "guide/3.2.101-Orbit.html",
    "title": "Orbit | TrinketTinker",
    "keywords": "Orbit Orbit around the anchor. Args Property Type Default Notes RadiusX float 96 Horizontal radius. RadiusY float 40 Vertical radius."
  },
  "guide/3.2.102-Relative.html": {
    "href": "guide/3.2.102-Relative.html",
    "title": "Orbit | TrinketTinker",
    "keywords": "Orbit Alters the offset depending on the direction, to give illusion that the trinket is attached to the player. Not very useful until you set an offset Args No extra arguments."
  },
  "guide/4-Ability.html": {
    "href": "guide/4-Ability.html",
    "title": "Ability | TrinketTinker",
    "keywords": "Ability Ability describes the effects that occur when you equip the trinket, like getting healed, or attacking an enemy. An ability is primarily defined by AbilityClass (what it does) and Proc (when does it activate). Structure Property Type Default Notes AbilityClass string DebugDummy Type name of the motion class to use, can use short name like Buff. Refer to pages under Motion Classes in the table of contents for details. Proc ProcOn Footstep Make ability activate when something happens. ProcTimer double -1 After an ability proc, prevent further activations for this amount of time. ProcSound string empty Play a sound cue when ability procs (details) ProcTemporarySprites List<TemporaryAnimatedSpriteDefinition> Temporary animated sprites to show when ability activates (details) Condition string empty A game state query that must pass before proc. DamageThreshold int Must receive or deal this much before before proc. For ReceiveDamage & DamageMonster IsBomb bool? empty Must deal damage with(true)/not with(false) a bomb. For DamageMonster & SlayMonster, IsCriticalHit bool? empty Must (true)/must not(false) deal a critical hit. Args Dictionary varies Arguments specific to an ability class, see respective page for details."
  },
  "guide/4.0-Proc.html": {
    "href": "guide/4.0-Proc.html",
    "title": "Proc | TrinketTinker",
    "keywords": "Proc Proc determines when an ability activate, kind of like the trigger in a trigger action. The word \"proc\" is gamer slang for \"activate\", used because it's only 4 letters long. The Proc value is not the only factor on whether ability will activate. It must pass any timeout and conditions listed in abilites. In content patcher, use a string value like \"Proc\": \"Always\" to set this value. Internally it is an enum. ProcOn Footstep When the player walks around. ReceiveDamage When the player is damanged. Checks if damage taken is greater than DamageThreshold. DamageMonster When the player damages a monster. Checks if damage dealt is greater than DamageThreshold, and if IsBomb & IsCriticalHit matches the damage. SlayMonster When the player slays a monster. Checks if damage dealt is greater than DamageThreshold, and if IsBomb & IsCriticalHit matches the damage. Timer When timer elapses, must set ProcTimer to use. Trigger When the action \"mushymato.TrinketTinker/ProcTrinket\" is called. If the unqualified trinket Id is given (e.g. \"mushymato.TrinketTinker/ProcTrinket MyTrinket\"), only the specified trinket's ablities will proc. Warped When the player warps/moves to another map. Always Activate the ability once on equip, deactivate it on unequip. Mainly useful as a way to give a persistent Buff. Use When used (right click while selected in hotbar)."
  },
  "guide/4.1-Ability Classes.html": {
    "href": "guide/4.1-Ability Classes.html",
    "title": "| TrinketTinker",
    "keywords": ""
  },
  "guide/4.1.0-DebugDummy.html": {
    "href": "guide/4.1.0-DebugDummy.html",
    "title": "DebugDummy | TrinketTinker",
    "keywords": "DebugDummy Does nothing besides logging to debug, can be helpful for confirming activation."
  },
  "guide/4.1.1-Buff.html": {
    "href": "guide/4.1.1-Buff.html",
    "title": "Buff | TrinketTinker",
    "keywords": "Buff Applies a buff to the player. Must be a buff registered in Data/Buffs, no support for inline buffs. Args Property Type Default Notes BuffId float 0 String id of buff to apply."
  },
  "guide/4.1.2-Health.html": {
    "href": "guide/4.1.2-Health.html",
    "title": "Health | TrinketTinker",
    "keywords": "Health Recover some percent of HP. Args Property Type Default Notes Min double 0 Minimum percent. Max double 0 Minimum percent."
  },
  "guide/4.1.3-Stamina.html": {
    "href": "guide/4.1.3-Stamina.html",
    "title": "Stamina | TrinketTinker",
    "keywords": "Stamina Recover some percent of stamina. Args Property Type Default Notes Min double 0 Minimum percent. Max double 0 Minimum percent."
  },
  "guide/4.1.4-ItemDrop.html": {
    "href": "guide/4.1.4-ItemDrop.html",
    "title": "ItemDrop | TrinketTinker",
    "keywords": "ItemDrop Drops an item, picked with item query. Args Property Type Default Notes SearchMode ItemQuerySearchMode RandomOfTypeItem Determine how the final item is picked from results. *Also accepts all members of GenericSpawnItemData, which is the usual item spawn fields minus Condition. Use the Condition field on ability instead."
  },
  "guide/4.1.5-Hitscan.html": {
    "href": "guide/4.1.5-Hitscan.html",
    "title": "Hitscan | TrinketTinker",
    "keywords": "Hitscan Do damage to a monster within range, can roll criticals and apply stun/knockback. Args Property Type Default Notes Min int 0 Minimum damage dealt. Max int 0 Maximum damage dealt. Range int 64 Pixel range for finding monster to target. Knockback float 0 Knockback modifier in %. Precision int 0 Precision, doesn't do much unless monster has dodge rate. CritChance float 0 Chance to roll a critical hit. CritDamage float 0 Modifier to critical hit damage. StunTime int 0 Milisecond time to stun the enemy. Hits int 0 Number of hits to apply at once, monster will only get iframes after the final hit. Hits int 0 Number of hits to apply at once, monster will only get iframes after the final hit. ExplodeRadius int 0 Generate a explosion with this radius on hit, farmer will take damage from it. Might damage another monster, but the monster that got hit would be in iframe at this point."
  },
  "guide/4.1.6-Projectile.html": {
    "href": "guide/4.1.6-Projectile.html",
    "title": "Projectile | TrinketTinker",
    "keywords": "Projectile Do damage to a monster within range using a projectile. Can roll criticals and apply stun/knockback. Uses a custom projectile class that accepts custom projectile texture. Args Property Type Default Notes Texture string TileSheets/Projectiles Path to custom texture. SpriteIndex int 0 Sprite index of projectile. TailCount int 0 Number of echo/trail sprites to draw. MinVelocity float 12 Starting projectile velocity. MaxVelocity float -1 Maximum projectile velocity. Acceleration float 1 Velocity increase per tick. Pierce int 1 Number of enemies the projectile can pass throgh before it is destroyed. IgnoreObjectCollisions bool false Allow projectile to pass through object/terrain. IgnoreLocationCollisions bool 0 Allow projectile to pass through walls. *and all arguments of Hitscan"
  },
  "guide/4.1.7-RaiseTrigger.html": {
    "href": "guide/4.1.7-RaiseTrigger.html",
    "title": "RaiseTrigger | TrinketTinker",
    "keywords": "RaiseTrigger Raise the trigger \"mushymato.TrinketTinker/TrinketProc\". The trigger action handler will recieve player and location (nullable), as well as the trinket item as targetItem."
  },
  "guide/5-Extras.html": {
    "href": "guide/5-Extras.html",
    "title": "Extras | TrinketTinker",
    "keywords": "Extras TrinketTinker provides a few extra supporting features. Item Query: mushymato.TrinketTinker_CREATE_TRINKET mushymato.TrinketTinker_CREATE_TRINKET <trinket id> [level] [variant] Creates a new trinket item. If the trinket has tinker data, set level and variant. Useful for producing a trinket at specified level/variant. Machine: Trinket Colorizer A new machine that can be purchased from the Blacksmith for 50 Gold Bars once the Anvil recipe is obtained. Consumes 3 Star Shards to reroll the variant on a TrinketTinker trinket, no effect on vanilla trinkets. The Trinket Colorizer is just a normal machine with qualified id (BC)mushymato.TrinketTinker_TrinketColorizer, mods are free to add their own machine rules."
  },
  "guide/x-example.html": {
    "href": "guide/x-example.html",
    "title": "| TrinketTinker",
    "keywords": "All examples are assumed to live under content patcher Tinker Trinket & Sprites // Load texture { \"Action\": \"Load\", \"Target\": \"Mods/{{ModId}}/MyTrinket\", \"FromFile\": \"sprites/{{TargetWithoutPath}}.png\" }, // Edit Data/Trinkets { \"Action\": \"EditData\", \"Target\": \"Data/Trinkets\", \"Entries\": { \"{{ModId}}_MyTrinket\": { // Trinket ID, gives qualified ID of (TR){{ModId}}_MyTrinket \"Id\": \"{{ModId}}_MyTrinket\", // Display name (with i18n) \"DisplayName\": \"{{i18n:MyTrinket.DisplayName}}\", // Description \"Description\": \"{{i18n:MyTrinket.Description}}\", // Path to asset texture load target \"Texture\": \"Mods/{{ModId}}/MyTrinket\", // Sheet index (with 16x16 sprite size) \"SheetIndex\": 0, // Add trinket to random drop pool once player attains combat mastery // Can still add other ways to acquire (e.g. shops, machine outputs) \"DropsNaturally\": true, // Allow trinket to reroll stats on the anvil \"CanBeReforged\": true, }, } }"
  },
  "index.html": {
    "href": "index.html",
    "title": "Trinket Tinker - Stardew Valley Trinket Framework | TrinketTinker",
    "keywords": "Trinket Tinker - Stardew Valley Trinket Framework This is a framework for creating trinkets that can have advanced abilities using just Content Patcher. If you are looking to make mods using this framework, start here. Credits Documentation generated with Docfx, with docfx-material theme. Changelog All notable changes to this project will be documented here. The format is based on Keep a Changelog, and this project adheres to Semantic Versioning. Unreleased Added The yak is being shaved please come back soon."
  }
}